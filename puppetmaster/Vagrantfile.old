# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
    # Supports local cache, don't wast bandwitdh
    # vagrant plugin install vagrant-cachier
    # https://github.com/fgrehm/vagrant-cachier 
    # if Vagrant.has_plugin?("vagrant-cachier")
    #   config.cache.auto_detect = true
    # end
      # All Vagrant configuration is done here. The most common configuration
      # options are documented and commented below. For a complete reference,
      # please see the online documentation at vagrantup.com.
      config.vm.hostname = "laptop-puppet-master.sc-ict.intranet"
      config.vm.box = "centos7-basic"
      config.vm.box_url =  "file:///Users/stef/vagrant/personal-boxes/centos7-basic/centos7-basic.box"   
      config.ssh.pty = true
      config.vm.provider "virtualbox" do |vb|       
      # Don't boot with headless mode. Use for debugging
      # vb.gui = true
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "8192"]
      vb.customize ["modifyvm", :id, "--cpus", "2"]
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
      vb.customize ["modifyvm", :id, "--cableconnected2", "on"]
      vb.customize ["modifyvm", :id, "--cableconnected3", "off"]
      vb.customize ["modifyvm", :id, "--cableconnected4", "off"]
      vb.customize ["modifyvm", :id, "--cableconnected5", "off"]
      vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 10000]
  
      # Assign this VM to a host-only network IP, allowing you to access it
      # via the IP. Host-only networks can talk to the host machine as well as
      # any other machines on the same network, but cannot be accessed (through this
      # network interface) by any external networks.
      config.vm.network :private_network, ip: "192.168.33.10"
        
      #Create firewall rules needed for new OSX
      # config.trigger.after [:provision, :up, :reload] do
      # system('echo "
      #   rdr pass on lo0 inet proto tcp from any to 127.0.0.1 port 3000 -> 127.0.0.1 port 3000
      #   rdr pass on lo0 inet proto tcp from any to 127.0.0.1 port 8080 -> 127.0.0.1 port 8080  
      #   rdr pass on lo0 inet proto tcp from any to 127.0.0.1 port 8443 -> 127.0.0.1 port 8443
      #   " | sudo pfctl -ef - > /dev/null 2>&1; echo "==> Fowarding Ports: 3000 -> 3000, 8080 -> 8080, 8443 -> 8443 & Enabling pf"')  
      # end

      #  config.trigger.after [:halt, :destroy] do
      # system("sudo pfctl -df /etc/pf.conf > /dev/null 2>&1; echo '==> Removing Port Forwarding & Disabling pf'")
      # end
      
      
      
    # Share an additional folder to the guest VM. The first argument is
    # an identifier, the second is the path on the guest to mount the
    # folder, and the third is the path on the host to the actual folder.  
    # config.vm.synced_folder "puppet/manifests", "/etc/puppetlabs/puppet/manifests"
    # config.vm.synced_folder "puppet/modules", "/etc/puppetlabs/puppet/modules"
    # config.vm.synced_folder "puppet/hieradata", "/etc/puppetlabs/puppet/hieradata"
    # config.vm.synced_folder "puppet", "/etc/puppetlabs"
  end
  #config.vm.provision :shell, :path => "echo.sh"
  config.vm.provision :shell, :path => "puppet_master_mono.sh"
      #config.vm.provision :shell, :privileged => true, :path => "puppet_master_mono.sh"
      #config.vm.provision :shell, :path => "puppet_r10k.sh"
      #Enable the Puppet provisioner
      # config.vm.provision :puppet do |puppet|
      #   puppet.manifests_path = "VagrantConf/manifests"
      #   puppet.manifest_file  = "default.pp"
      #   puppet.options        = "--verbose --modulepath /home/vagrant/modules"
      # end 
    
end